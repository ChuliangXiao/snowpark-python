from typing import Any, Optional

class SnowparkClientException(Exception):
    message: Any
    error_code: Any
    telemetry_message: Any
    def __init__(self, message: str, error_code: Optional[str] = ...) -> None: ...

class _SnowparkInternalException(SnowparkClientException): ...
class SnowparkDataframeException(SnowparkClientException): ...
class SnowparkPlanException(SnowparkClientException): ...
class SnowparkSQLException(SnowparkClientException): ...
class SnowparkServerException(SnowparkClientException): ...
class SnowparkGeneralException(SnowparkClientException): ...
class SnowparkColumnException(SnowparkDataframeException): ...
class SnowparkJoinException(SnowparkDataframeException): ...
class SnowparkDataframeReaderException(SnowparkDataframeException): ...
class SnowparkPandasException(SnowparkDataframeException): ...
class SnowparkTableException(SnowparkDataframeException): ...
class SnowparkCreateViewException(SnowparkPlanException): ...
class SnowparkSQLAmbiguousJoinException(SnowparkSQLException): ...
class SnowparkSQLInvalidIdException(SnowparkSQLException): ...
class SnowparkSQLUnexpectedAliasException(SnowparkSQLException): ...
class SnowparkSessionException(SnowparkServerException): ...
class SnowparkMissingDbOrSchemaException(SnowparkServerException): ...
class SnowparkQueryCancelledException(SnowparkServerException): ...
class SnowparkFetchDataException(SnowparkServerException): ...
class SnowparkUploadUdfFileException(SnowparkServerException): ...
class SnowparkInvalidObjectNameException(SnowparkGeneralException): ...
